#!/usr/bin/env php
<?php
/*
```
     _
 ___/__) ,
(, /      __   _    _  __
  /    _(_/ (_(_/__(/_/ (_
 (_____      .-/
	)   (_/
```
 */


$res = [];
if (is_array($argv)) {
    foreach ($argv as $v) {
        if (preg_match('/^\-\-([a-zA-Z_]+?)=(.*?)$/', $v, $info)) {
            $res[$info[1]] = $info[2];
        }
    }
}

extract($res);


array_shift($argv);

if (!isset($argv[0]) || $argv[0] == '--help' || $argv[0] == '-h') {
    echo '     _', PHP_EOL;
    echo ' ___/__) ,', PHP_EOL;
    echo '(, /      __   _    _  __', PHP_EOL;
    echo '  /    _(_/ (_(_/__(/_/ (_', PHP_EOL;
    echo ' (_____      .-/', PHP_EOL;
    echo '        )   (_/', PHP_EOL, PHP_EOL;

    echo 'Usage:', PHP_EOL;
    echo '  --help, -h                for help', PHP_EOL;
    echo '  --app_name=<name>         set app name', PHP_EOL;
    echo '  --version, -v             show linger frame\'s version', PHP_EOL;
    echo PHP_EOL;
} elseif ($argv[0] == '-v' || $argv[0] == '--version') {
    echo 'v1.0.1', PHP_EOL;
    echo PHP_EOL;
} else {
    if (isset($app_name) && !empty($app_name)) {
        //project structure.
        $d_f = [
                'dirs'  => [
                        $app_name . '/conf',
                        $app_name . '/library/tool',
                        $app_name . '/library/data',
                        $app_name . '/model',
                        $app_name . '/module/home/controller',
                        $app_name . '/module/home/view',
                        $app_name . '/plugin',
                        'public/js',
                        'public/css',
                        'public/images',
                        'public/tmp/compile',
                        'public/tmp/cache',
                ],
                'files' => [
                        $app_name . '/Bootstrap.php'                              => 'bootstrap_php',
                        $app_name . '/conf/config.php'                            => 'config_php',
                        $app_name . '/plugin/UserPlugin.php'                      => 'userplugin_php',
                        $app_name . '/model/IndexModel.php'                       => 'indexmodel_php',
                        $app_name . '/module/home/controller/IndexController.php' => 'indexcontroller_php',
                        $app_name . '/module/home/view/index.html'                => 'index_html',
                        'public/index.php'                                        => 'index_php',
                ]
        ];

        //=================default file contents.=================/
        $userplugin_php = <<<PHP
<?php
namespace plugin;

use Linger\Kernel\Plugin;
use Linger\Kernel\Request;
use Linger\Kernel\Response;

class UserPlugin implements Plugin
{
        public function routerStartup(Request \$request, Response \$response)
        {
                // TODO: Implement routerStartup() method.
        }
        
        public function routerShutdown(Request \$request, Response \$response)
        {
                // TODO: Implement routerShutdown() method.
        }
        
        public function dispatchStartup(Request \$request, Response \$response)
        {
                // TODO: Implement dispatchStartup() method.
        }
        
        public function dispatchShutdown(Request \$request, Response \$response)
        {
                // TODO: Implement dispatchShutdown() method.
        }
        
}
PHP;

        $bootstrap_php = <<<PHP
<?php

namespace $app_name;

//use plugin\UserPlugin;

class Bootstrap
{
        public function _initSession(\Linger\Kernel\Dispatcher \$dispatcher)
        {
                session_start();
        }

//    public function _initPlugin(\Linger\Kernel\Dispatcher \$dispatcher)
//    {
//        \$user = new UserPlugin();
//        \$dispatcher->registerPlugin(\$user);
//    }
}
PHP;

        $config_php = <<<PHP
<?php
// this is global config file.
return array(
        //debug and log config. If debug is enabled, the error message and exception will not
        //be written to the file, otherwise it will.
        'DEBUG'              => 1,
        'LOG_PATH'           => '/',
        'LOG_ARCHIVE_TYPE'   => 'Y/md/',
        //database config
        'DB'                 => [
                'TEST_MASTER' => [
                        'DB_HOST'   => '127.0.0.1',
                        'DB_USER'   => '',
                        'DB_PWD'    => '',
                        'DB_NAME'   => '',
                        'DB_PREFIX' => '',
                ]
        ],
        //...
        'DEFAULT_MODULE'     => 'home',
        'DEFAULT_CONTROLLER' => 'index',
        'DEFAULT_ACTION'     => 'index',
        'MODULE_ALLOW_LIST'  => ['index', 'admin', 'home'],
        'ROUTE'              => array(
                'home.html'        => 'home/index/index',
                'list/(\d+)\.html' => 'home/index/list/id/\\1',
        ),
        'TPL_CACHE_TIME'     => 1000,
        'URL_MODEL'          => 2,
);
PHP;

        $indexmodel_php = <<<PHP
<?php
namespace model;
use Linger\Kernel\Model;

class IndexModel extends Model
{
        /**
         * @var string
         */
        protected \$database = 'TEST_MASTER';
        
}
PHP;

        $indexcontroller_php = <<<PHP
<?php
namespace home\controller;
use Linger\Kernel\Controller;

class IndexController extends Controller
{
        public function _init()
        {
                parent::_init();
        }
        
        public function indexAction()
        {
                \$this->display();
        }
}
PHP;

        $index_html = <<<PHP
<!DOCTYPE html><html><head><meta charset="UTF-8"><title>Hello Linger</title><style>body{margin:0;background:#add8e6}.doa{position:relative;top:100px}.head{margin:0 auto;width:400px;height:350px;background:#008ee3;position:relative;border-radius:50% 50% 25% 25% / 55% 55% 45% 45%}.head:hover .face>div:first-child div{left:0;transition:all 1s}.head:hover .face>div:first-child div div{left:0;transition:all 1s}.face{width:310px;height:260px;background:snow;border-radius:50% 50% 25% 25% / 55% 55% 45% 45%;position:relative;top:90px;left:45px}.face>div:first-child{width:80px;height:100px;border-radius:50%;border:2px #000 solid;background:snow;float:left;position:relative;top:-40px;left:71px;z-index:50}.face>div:last-child{width:80px;height:100px;border-radius:50%;border:2px #000 solid;background:snow;float:left;position:relative;top:-40px;left:71px;z-index:50}.face>div:first-child div{width:20px;height:25px;background:#000;border-radius:50%;position:absolute;top:45px;left:60px}.face>div:first-child div div{width:10px;height:10px;background:#fff;border-radius:50%;position:absolute;top:7px;left:10px}.face>div:last-child div{width:20px;height:25px;background:#000;border-radius:50%;position:absolute;top:45px}.face>div:last-child div div{width:10px;height:10px;background:#fff;border-radius:50%;position:absolute;top:7px}.nose{width:30px;height:30px;border-radius:50%;background:#c70000;position:absolute;top:130px;left:50%;margin-left:-15px;z-index:10}.nose div{width:10px;height:10px;border-radius:50%;position:absolute;background:#fff;top:10px;margin-left:20px;z-index:10}.nose1{width:2px;height:130px;background:#000;position:absolute;top:160px;left:50%;margin-left:-1px;z-index:10}.mouth{width:250px;height:200px;border-radius:50%;background:snow;border-bottom:2px #000 solid;margin:-230px auto;position:relative}.mouth div:first-child{width:82px;height:2px;background:#000;position:absolute;z-index:1000;top:-25px;left:6px;display:none}.mouth div:nth-child(2){width:82px;height:2px;background:#000;position:absolute;z-index:1000;top:-25px;left:90px;display:none}.mouth:hover{border-radius:0;width:180px;height:200px}.mouth:hover div:first-child,.mouth:hover div:nth-child(2){display:block}.neck{width:330px;height:200px;border-radius:50% 50% 20% 20% / 50% 50% 50% 50%;background:#e30000;margin:80px auto;z-index:100}.neck div:first-child{border:2px #000 solid;border-radius:50%;width:40px;height:40px;background:#ffdd2e;position:absolute;top:350px;left:50%;margin-left:-22px;transition:all 1s}.neck div:nth-child(2){border:2px #000 solid;width:44px;height:5px;background:#ffdd2e;position:absolute;left:50%;margin-left:-24px;top:363px;border-radius:5px;transition:all 1s}.neck div:nth-child(3){width:8px;height:8px;border:2px #000 solid;position:absolute;background:#6c5844;border-radius:50%;left:50%;margin-left:-6px;top:375px;transition:all 1s}.neck div:nth-child(4){width:2px;height:8px;background:#000;position:absolute;left:50%;margin-left:-1px;top:385px;transition:all 1s}.neck:hover div:first-child{width:60px;height:60px;left:50%;margin-left:-30px}.neck:hover div:nth-child(2){width:66px;height:7.5px;left:50%;margin-left:-33px}.neck:hover div:nth-child(3){width:12px;height:12px;left:50%;margin-left:-6px;top:385px}.neck:hover div:nth-child(4){width:2px;height:12px;left:50%;margin-left:1px;top:400px}.beard .left div:first-child{width:120px;height:40px;border-top:2px #000 solid;border-radius:10% 90% 10% 90% / 10% 90% 10% 90%;position:absolute;left:50%;top:140px;margin-left:-170px;z-index:100}.beard .left div:nth-child(2){width:120px;height:40px;border-top:2px #000 solid;border-radius:10% 90% 10% 90% / 30% 70% 40% 60%;position:absolute;left:50%;top:170px;margin-left:-170px;z-index:100}.beard .left div:last-child{width:120px;height:40px;border-top:2px #000 solid;border-radius:10% 90% 10% 90% / 40% 60% 10% 90%;position:absolute;left:50%;top:200px;margin-left:-170px;z-index:100}.beard .right div:first-child{width:120px;height:40px;border-top:2px #000 solid;border-radius:90% 10% 90% 10% / 90% 10% 90% 10%;position:absolute;left:50%;top:140px;margin-left:50px;z-index:100}.beard .right div:nth-child(2){width:120px;height:40px;border-top:2px #000 solid;border-radius:90% 10% 90% 10% / 70% 30% 60% 40%;position:absolute;left:50%;top:170px;margin-left:50px;z-index:100}.beard .right div:last-child{width:120px;height:40px;border-top:2px #000 solid;border-radius:90% 10% 90% 10% / 60% 40% 90% 10%;position:absolute;left:50%;top:200px;margin-left:50px;z-index:100}.beard span{display:block;width:60px;height:3.5px;background:#fff;border-radius:4px;position:absolute;top:352px;left:50%;margin-left:-105px}</style></head><body><div class="doa"><div class="head"><div class="face"><div><div><div></div></div><div><div></div></div></div><div><div><div></div></div></div></div><div class="nose"><div></div></div><div class="nose1"></div></div><div class="mouth"><div></div><div></div></div><div class="neck"><div></div><div></div><div></div><div></div></div><div class="beard"><div class="left"><div></div><div></div><div></div></div><div class="right"><div></div><div></div><div></div></div><span></span></div></div></body></html>
PHP;

        $date = date('Y-m-d H:i:s', time());
        $index_php = <<<PHP
<?php
/*
 |------------------------------------------------------------------
 | linger.iliubang.cn
 |------------------------------------------------------------------
 | @author    : liubang
 | @date      : $date
 | @copyright : (c) iliubang.cn
 | @license   : MIT (http://opensource.org/licenses/MIT)
 |------------------------------------------------------------------
 */

define('APP_ROOT', realpath(dirname(__FILE__) . '/../'));

define('APP_NAME', '$app_name');

require APP_ROOT . '/Linger/Linger.php';

app(APP_ROOT . '/$app_name/conf/config.php')->bootstrap()->run();

PHP;

        //=================default file contents.=================/

        //app base path.
        $appPath = realpath(dirname(__FILE__) . '/../');
        if (is_writeable($appPath)) {
            foreach ($d_f['dirs'] as $v) {
                $dir = $appPath . '/' . $v;
                echo "\033[34m正在创建目录\033[0m", $dir, '......', PHP_EOL;
                if (mkdir($dir, 0777, true)) {
                    echo "\033[34m创建目录 \033[0m", $dir, "\033[32m 成功！\033[0m", PHP_EOL;
                } else {
                    echo "\033[34m创建目录 \033[0m", $dir, "\033[31m 失败！\033[0m", PHP_EOL;
                }
            }

            foreach ($d_f['files'] as $key => $v) {
                $file = $appPath . '/' . $key;
                echo "\e[34m正在创建文件\033[0m", $file, '......', PHP_EOL;
                if (false !== file_put_contents($file, $$v)) {
                    echo "\033[34m创建文件 \033[0m", $file, "\033[32m 成功！\033[0m", PHP_EOL;
                } else {
                    echo "\033[34m创建文件 \033[0m", $file, "\033[31m 失败！\033[0m", PHP_EOL;
                }
            }

            echo PHP_EOL;
            echo "\e[32m项目初始化完成！\e[0m", PHP_EOL, PHP_EOL;
        } else {
            echo PHP_EOL;
            echo "\e[31m$appPath目录没有写权限！\e[0m", PHP_EOL;
        }
    }
}
